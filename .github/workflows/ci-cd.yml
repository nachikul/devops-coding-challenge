name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  APP_NAME: "localhost/springbootrest"
  IMAGE_TAG: "latest"
  CHART: "springbootrest"
  CHART_VERSION: "1.0.0"
  HELM_REPO_URL: "https://charts.bitnami.com/bitnami"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'

    - name: Build Jar
      run: mvn clean package

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t your-docker-repo/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} .
        docker push your-docker-repo/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan \
          -var "name=${{ env.APP_NAME }}" \
          -var "namespace=default" \
          -var "image=your-docker-repo/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}" \
          -var "chart=${{ env.CHART }}" \
          -var "chart_version=${{ env.CHART_VERSION }}" \
          -var "helm_repo_url=${{ env.HELM_REPO_URL }}" \
          -var "kubeconfig_path=${{ secrets.KUBECONFIG_PATH }}"

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve \
          -var "name=${{ env.APP_NAME }}" \
          -var "namespace=default" \
          -var "image=your-docker-repo/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}" \
          -var "chart=${{ env.CHART }}" \
          -var "chart_version=${{ env.CHART_VERSION }}" \
          -var "helm_repo_url=${{ env.HELM_REPO_URL }}" \
          -var "kubeconfig_path=${{ secrets.KUBECONFIG_PATH }}"

    - name: Post-Deployment Info
      run: echo "Deployment completed successfully!"