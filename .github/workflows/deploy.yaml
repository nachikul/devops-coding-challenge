name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: "localhost/springbootrest"
  IMAGE_NAME: "localhost/springbootrest"
  CHART_PATH: "./helm/springbootrest" # Relative path to the local Helm chart

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      KUBECONFIG_PATH: "~/.kube/config"

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Application
      run: |
        echo "Building the application using Maven..."
        ./mvnw clean package -DskipTests

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Docker Build & Load to Minikube
      run: |
        echo "Building Docker image and loading it into Minikube..."
        docker build -t ${IMAGE_NAME}:${{ github.event.inputs.IMAGE_TAG || 'latest' }} .
        minikube image load ${IMAGE_NAME}:${{ github.event.inputs.IMAGE_TAG || 'latest' }}

    - name: Helm Uninstall (Optional Cleanup)
      run: |
        echo "Uninstalling old Helm release if exists..."
        helm uninstall ${APP_NAME} --namespace default || true

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6

    - name: Set up Minikube
      uses: manusa/actions-setup-minikube@v2
      with:
        minikube-version: 'latest'
        kubernetes-version: 'v1.27.3'

    - name: Terraform Init
      run: |
        echo "Initializing Terraform..."
        cd terraform
        terraform init

    - name: Terraform Plan
      run: |
        echo "Running Terraform plan..."
        cd terraform
        terraform plan \
          -var "name=${APP_NAME}" \
          -var "image=${IMAGE_NAME}:${{ github.event.inputs.IMAGE_TAG || 'latest' }}" \
          -var "kubeconfig_path=${KUBECONFIG_PATH}"

    - name: Terraform Apply
      run: |
        echo "Applying Terraform changes..."
        cd terraform
        terraform apply -auto-approve \
          -var "name=${APP_NAME}" \
          -var "image=${IMAGE_NAME}:${{ github.event.inputs.IMAGE_TAG || 'latest' }}" \
          -var "kubeconfig_path=${KUBECONFIG_PATH}"